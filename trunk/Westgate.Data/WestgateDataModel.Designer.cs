<<<<<<< .mine
ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WestgateModel", "FK_Subcategories_Categories", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Westgate.Data.Category), "Subcategories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Westgate.Data.Subcategory), true)]
[assembly: EdmRelationshipAttribute("WestgateModel", "FK_Images_Stories", "Stories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Westgate.Data.Story), "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Westgate.Data.Image), true)]
[assembly: EdmRelationshipAttribute("WestgateModel", "FK_Stories_Subcategories", "Subcategories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Westgate.Data.Subcategory), "Stories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Westgate.Data.Story), true)]

#endregion

namespace Westgate.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WestgateEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WestgateEntities object using the connection string found in the 'WestgateEntities' section of the application configuration file.
        /// </summary>
        public WestgateEntities() : base("name=WestgateEntities", "WestgateEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WestgateEntities object.
        /// </summary>
        public WestgateEntities(string connectionString) : base(connectionString, "WestgateEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WestgateEntities object.
        /// </summary>
        public WestgateEntities(EntityConnection connection) : base(connection, "WestgateEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Image> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Image>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Image> _Images;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Story> Stories
        {
            get
            {
                if ((_Stories == null))
                {
                    _Stories = base.CreateObjectSet<Story>("Stories");
                }
                return _Stories;
            }
        }
        private ObjectSet<Story> _Stories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subcategory> Subcategories
        {
            get
            {
                if ((_Subcategories == null))
                {
                    _Subcategories = base.CreateObjectSet<Subcategory>("Subcategories");
                }
                return _Subcategories;
            }
        }
        private ObjectSet<Subcategory> _Subcategories;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Images EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImages(Image image)
        {
            base.AddObject("Images", image);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStories(Story story)
        {
            base.AddObject("Stories", story);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subcategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubcategories(Subcategory subcategory)
        {
            base.AddObject("Subcategories", subcategory);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WestgateModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId, global::System.String name)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfSubcategories
        {
            get
            {
                return _NumberOfSubcategories;
            }
            set
            {
                OnNumberOfSubcategoriesChanging(value);
                ReportPropertyChanging("NumberOfSubcategories");
                _NumberOfSubcategories = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfSubcategories");
                OnNumberOfSubcategoriesChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfSubcategories;
        partial void OnNumberOfSubcategoriesChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfSubcategoriesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WestgateModel", "FK_Subcategories_Categories", "Subcategories")]
        public EntityCollection<Subcategory> Subcategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subcategory>("WestgateModel.FK_Subcategories_Categories", "Subcategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subcategory>("WestgateModel.FK_Subcategories_Categories", "Subcategories", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WestgateModel", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Image object.
        /// </summary>
        /// <param name="imageId">Initial value of the ImageId property.</param>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Image CreateImage(global::System.Int32 imageId, global::System.Int32 storyId, global::System.String name)
        {
            Image image = new Image();
            image.ImageId = imageId;
            image.StoryId = storyId;
            image.Name = name;
            return image;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageId
        {
            get
            {
                return _ImageId;
            }
            set
            {
                if (_ImageId != value)
                {
                    OnImageIdChanging(value);
                    ReportPropertyChanging("ImageId");
                    _ImageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageId");
                    OnImageIdChanged();
                }
            }
        }
        private global::System.Int32 _ImageId;
        partial void OnImageIdChanging(global::System.Int32 value);
        partial void OnImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                OnStoryIdChanging(value);
                ReportPropertyChanging("StoryId");
                _StoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoryId");
                OnStoryIdChanged();
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BeforeImagePath
        {
            get
            {
                return _BeforeImagePath;
            }
            set
            {
                OnBeforeImagePathChanging(value);
                ReportPropertyChanging("BeforeImagePath");
                _BeforeImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BeforeImagePath");
                OnBeforeImagePathChanged();
            }
        }
        private global::System.String _BeforeImagePath;
        partial void OnBeforeImagePathChanging(global::System.String value);
        partial void OnBeforeImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AfterImagePath
        {
            get
            {
                return _AfterImagePath;
            }
            set
            {
                OnAfterImagePathChanging(value);
                ReportPropertyChanging("AfterImagePath");
                _AfterImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AfterImagePath");
                OnAfterImagePathChanged();
            }
        }
        private global::System.String _AfterImagePath;
        partial void OnAfterImagePathChanging(global::System.String value);
        partial void OnAfterImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CombinedImagePath
        {
            get
            {
                return _CombinedImagePath;
            }
            set
            {
                OnCombinedImagePathChanging(value);
                ReportPropertyChanging("CombinedImagePath");
                _CombinedImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CombinedImagePath");
                OnCombinedImagePathChanged();
            }
        }
        private global::System.String _CombinedImagePath;
        partial void OnCombinedImagePathChanging(global::System.String value);
        partial void OnCombinedImagePathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WestgateModel", "FK_Images_Stories", "Stories")]
        public Story Story
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("WestgateModel.FK_Images_Stories", "Stories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("WestgateModel.FK_Images_Stories", "Stories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Story> StoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("WestgateModel.FK_Images_Stories", "Stories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Story>("WestgateModel.FK_Images_Stories", "Stories", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WestgateModel", Name="Story")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Story : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Story object.
        /// </summary>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="subcategoryId">Initial value of the SubcategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Story CreateStory(global::System.Int32 storyId, global::System.Int32 subcategoryId, global::System.String name)
        {
            Story story = new Story();
            story.StoryId = storyId;
            story.SubcategoryId = subcategoryId;
            story.Name = name;
            return story;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                if (_StoryId != value)
                {
                    OnStoryIdChanging(value);
                    ReportPropertyChanging("StoryId");
                    _StoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoryId");
                    OnStoryIdChanged();
                }
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubcategoryId
        {
            get
            {
                return _SubcategoryId;
            }
            set
            {
                OnSubcategoryIdChanging(value);
                ReportPropertyChanging("SubcategoryId");
                _SubcategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubcategoryId");
                OnSubcategoryIdChanged();
            }
        }
        private global::System.Int32 _SubcategoryId;
        partial void OnSubcategoryIdChanging(global::System.Int32 value);
        partial void OnSubcategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WestgateModel", "FK_Images_Stories", "Images")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("WestgateModel.FK_Images_Stories", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("WestgateModel.FK_Images_Stories", "Images", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WestgateModel", "FK_Stories_Subcategories", "Subcategories")]
        public Subcategory Subcategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subcategory>("WestgateModel.FK_Stories_Subcategories", "Subcategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subcategory>("WestgateModel.FK_Stories_Subcategories", "Subcategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subcategory> SubcategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subcategory>("WestgateModel.FK_Stories_Subcategories", "Subcategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subcategory>("WestgateModel.FK_Stories_Subcategories", "Subcategories", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WestgateModel", Name="Subcategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subcategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subcategory object.
        /// </summary>
        /// <param name="subcategoryId">Initial value of the SubcategoryId property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Subcategory CreateSubcategory(global::System.Int32 subcategoryId, global::System.Int32 categoryId, global::System.String name)
        {
            Subcategory subcategory = new Subcategory();
            subcategory.SubcategoryId = subcategoryId;
            subcategory.CategoryId = categoryId;
            subcategory.Name = name;
            return subcategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubcategoryId
        {
            get
            {
                return _SubcategoryId;
            }
            set
            {
                if (_SubcategoryId != value)
                {
                    OnSubcategoryIdChanging(value);
                    ReportPropertyChanging("SubcategoryId");
                    _SubcategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubcategoryId");
                    OnSubcategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _SubcategoryId;
        partial void OnSubcategoryIdChanging(global::System.Int32 value);
        partial void OnSubcategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DefaultStoryId
        {
            get
            {
                return _DefaultStoryId;
            }
            set
            {
                OnDefaultStoryIdChanging(value);
                ReportPropertyChanging("DefaultStoryId");
                _DefaultStoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultStoryId");
                OnDefaultStoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DefaultStoryId;
        partial void OnDefaultStoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnDefaultStoryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WestgateModel", "FK_Subcategories_Categories", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("WestgateModel.FK_Subcategories_Categories", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("WestgateModel.FK_Subcategories_Categories", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("WestgateModel.FK_Subcategories_Categories", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("WestgateModel.FK_Subcategories_Categories", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WestgateModel", "FK_Stories_Subcategories", "Stories")]
        public EntityCollection<Story> Stories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Story>("WestgateModel.FK_Stories_Subcategories", "Stories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Story>("WestgateModel.FK_Stories_Subcategories", "Stories", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
=======
ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Westgate.Data.Model", "FK_Subcategories_Categories", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Westgate.Data.Category), "Subcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Westgate.Data.Subcategory), true)]
[assembly: EdmRelationshipAttribute("Westgate.Data.Model", "FK_Images_Stories", "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Westgate.Data.Story), "Image", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Westgate.Data.Image), true)]
[assembly: EdmRelationshipAttribute("Westgate.Data.Model", "FK_Stories_Subcategories", "Subcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Westgate.Data.Subcategory), "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Westgate.Data.Story), true)]

#endregion

namespace Westgate.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WestgateEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WestgateEntities object using the connection string found in the 'WestgateEntities' section of the application configuration file.
        /// </summary>
        public WestgateEntities() : base("name=WestgateEntities", "WestgateEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WestgateEntities object.
        /// </summary>
        public WestgateEntities(string connectionString) : base(connectionString, "WestgateEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WestgateEntities object.
        /// </summary>
        public WestgateEntities(EntityConnection connection) : base(connection, "WestgateEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Image> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Image>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Image> _Images;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Story> Stories
        {
            get
            {
                if ((_Stories == null))
                {
                    _Stories = base.CreateObjectSet<Story>("Stories");
                }
                return _Stories;
            }
        }
        private ObjectSet<Story> _Stories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subcategory> Subcategories
        {
            get
            {
                if ((_Subcategories == null))
                {
                    _Subcategories = base.CreateObjectSet<Subcategory>("Subcategories");
                }
                return _Subcategories;
            }
        }
        private ObjectSet<Subcategory> _Subcategories;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Images EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImages(Image image)
        {
            base.AddObject("Images", image);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStories(Story story)
        {
            base.AddObject("Stories", story);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subcategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubcategories(Subcategory subcategory)
        {
            base.AddObject("Subcategories", subcategory);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Westgate.Data.Model", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId, global::System.String name)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfSubcategories
        {
            get
            {
                return _NumberOfSubcategories;
            }
            set
            {
                OnNumberOfSubcategoriesChanging(value);
                ReportPropertyChanging("NumberOfSubcategories");
                _NumberOfSubcategories = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfSubcategories");
                OnNumberOfSubcategoriesChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfSubcategories;
        partial void OnNumberOfSubcategoriesChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfSubcategoriesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Westgate.Data.Model", "FK_Subcategories_Categories", "Subcategory")]
        public EntityCollection<Subcategory> Subcategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subcategory>("Westgate.Data.Model.FK_Subcategories_Categories", "Subcategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subcategory>("Westgate.Data.Model.FK_Subcategories_Categories", "Subcategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Westgate.Data.Model", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Image object.
        /// </summary>
        /// <param name="imageId">Initial value of the ImageId property.</param>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Image CreateImage(global::System.Int32 imageId, global::System.Int32 storyId, global::System.String name)
        {
            Image image = new Image();
            image.ImageId = imageId;
            image.StoryId = storyId;
            image.Name = name;
            return image;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageId
        {
            get
            {
                return _ImageId;
            }
            set
            {
                if (_ImageId != value)
                {
                    OnImageIdChanging(value);
                    ReportPropertyChanging("ImageId");
                    _ImageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageId");
                    OnImageIdChanged();
                }
            }
        }
        private global::System.Int32 _ImageId;
        partial void OnImageIdChanging(global::System.Int32 value);
        partial void OnImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                OnStoryIdChanging(value);
                ReportPropertyChanging("StoryId");
                _StoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoryId");
                OnStoryIdChanged();
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BeforeImagePath
        {
            get
            {
                return _BeforeImagePath;
            }
            set
            {
                OnBeforeImagePathChanging(value);
                ReportPropertyChanging("BeforeImagePath");
                _BeforeImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BeforeImagePath");
                OnBeforeImagePathChanged();
            }
        }
        private global::System.String _BeforeImagePath;
        partial void OnBeforeImagePathChanging(global::System.String value);
        partial void OnBeforeImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AfterImagePath
        {
            get
            {
                return _AfterImagePath;
            }
            set
            {
                OnAfterImagePathChanging(value);
                ReportPropertyChanging("AfterImagePath");
                _AfterImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AfterImagePath");
                OnAfterImagePathChanged();
            }
        }
        private global::System.String _AfterImagePath;
        partial void OnAfterImagePathChanging(global::System.String value);
        partial void OnAfterImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CombinedImagePath
        {
            get
            {
                return _CombinedImagePath;
            }
            set
            {
                OnCombinedImagePathChanging(value);
                ReportPropertyChanging("CombinedImagePath");
                _CombinedImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CombinedImagePath");
                OnCombinedImagePathChanged();
            }
        }
        private global::System.String _CombinedImagePath;
        partial void OnCombinedImagePathChanging(global::System.String value);
        partial void OnCombinedImagePathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Westgate.Data.Model", "FK_Images_Stories", "Story")]
        public Story Story
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("Westgate.Data.Model.FK_Images_Stories", "Story").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("Westgate.Data.Model.FK_Images_Stories", "Story").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Story> StoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("Westgate.Data.Model.FK_Images_Stories", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Story>("Westgate.Data.Model.FK_Images_Stories", "Story", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Westgate.Data.Model", Name="Story")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Story : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Story object.
        /// </summary>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="subcategoryId">Initial value of the SubcategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Story CreateStory(global::System.Int32 storyId, global::System.Int32 subcategoryId, global::System.String name)
        {
            Story story = new Story();
            story.StoryId = storyId;
            story.SubcategoryId = subcategoryId;
            story.Name = name;
            return story;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                if (_StoryId != value)
                {
                    OnStoryIdChanging(value);
                    ReportPropertyChanging("StoryId");
                    _StoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoryId");
                    OnStoryIdChanged();
                }
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubcategoryId
        {
            get
            {
                return _SubcategoryId;
            }
            set
            {
                OnSubcategoryIdChanging(value);
                ReportPropertyChanging("SubcategoryId");
                _SubcategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubcategoryId");
                OnSubcategoryIdChanged();
            }
        }
        private global::System.Int32 _SubcategoryId;
        partial void OnSubcategoryIdChanging(global::System.Int32 value);
        partial void OnSubcategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Westgate.Data.Model", "FK_Images_Stories", "Image")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("Westgate.Data.Model.FK_Images_Stories", "Image");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("Westgate.Data.Model.FK_Images_Stories", "Image", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Westgate.Data.Model", "FK_Stories_Subcategories", "Subcategory")]
        public Subcategory Subcategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subcategory>("Westgate.Data.Model.FK_Stories_Subcategories", "Subcategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subcategory>("Westgate.Data.Model.FK_Stories_Subcategories", "Subcategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subcategory> SubcategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subcategory>("Westgate.Data.Model.FK_Stories_Subcategories", "Subcategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subcategory>("Westgate.Data.Model.FK_Stories_Subcategories", "Subcategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Westgate.Data.Model", Name="Subcategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subcategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subcategory object.
        /// </summary>
        /// <param name="subcategoryId">Initial value of the SubcategoryId property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Subcategory CreateSubcategory(global::System.Int32 subcategoryId, global::System.Int32 categoryId, global::System.String name)
        {
            Subcategory subcategory = new Subcategory();
            subcategory.SubcategoryId = subcategoryId;
            subcategory.CategoryId = categoryId;
            subcategory.Name = name;
            return subcategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubcategoryId
        {
            get
            {
                return _SubcategoryId;
            }
            set
            {
                if (_SubcategoryId != value)
                {
                    OnSubcategoryIdChanging(value);
                    ReportPropertyChanging("SubcategoryId");
                    _SubcategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubcategoryId");
                    OnSubcategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _SubcategoryId;
        partial void OnSubcategoryIdChanging(global::System.Int32 value);
        partial void OnSubcategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DefaultStoryId
        {
            get
            {
                return _DefaultStoryId;
            }
            set
            {
                OnDefaultStoryIdChanging(value);
                ReportPropertyChanging("DefaultStoryId");
                _DefaultStoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultStoryId");
                OnDefaultStoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DefaultStoryId;
        partial void OnDefaultStoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnDefaultStoryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Westgate.Data.Model", "FK_Subcategories_Categories", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Westgate.Data.Model.FK_Subcategories_Categories", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Westgate.Data.Model.FK_Subcategories_Categories", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Westgate.Data.Model.FK_Subcategories_Categories", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Westgate.Data.Model.FK_Subcategories_Categories", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Westgate.Data.Model", "FK_Stories_Subcategories", "Story")]
        public EntityCollection<Story> Stories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Story>("Westgate.Data.Model.FK_Stories_Subcategories", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Story>("Westgate.Data.Model.FK_Stories_Subcategories", "Story", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
>>>>>>> .r20
